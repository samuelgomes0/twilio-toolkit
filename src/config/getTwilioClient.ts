import fs from "fs";
import os from "os";
import path from "path";
import { Twilio } from "twilio";

/**
 * Obt√©m o cliente Twilio configurado com base no ambiente.
 * L√™ o arquivo de configura√ß√£o do diret√≥rio do usu√°rio.
 * @param environment O ambiente desejado (ex: prd, hml)
 * @returns Inst√¢ncia do cliente Twilio
 */
export default function getTwilioClient(environment: string): Twilio {
  const homeDir = os.homedir();
  const configPath = path.join(
    homeDir,
    ".twilio-toolkit",
    `${environment}.json`
  );

  if (!fs.existsSync(configPath)) {
    console.error(
      `‚ùå Nenhum arquivo de configura√ß√£o encontrado para o ambiente '${environment}'.\n` +
        `üí° Use o comando: twilio-toolkit configure-env --env ${environment} --accountSid ... --authToken ...`
    );
    process.exit(1);
  }

  try {
    const { accountSid, authToken } = require(configPath);
    if (!accountSid || !authToken) {
      console.error(
        `‚ùå Configura√ß√£o inv√°lida em '${configPath}'.\n` +
          `üí° Verifique se 'accountSid' e 'authToken' est√£o definidos corretamente.`
      );
      process.exit(1);
    }

    return new Twilio(accountSid, authToken);
  } catch (error) {
    console.error(
      `‚ùå Erro ao ler o arquivo de configura√ß√£o '${configPath}'.\n` +
        `üí° Verifique se o arquivo √© um JSON v√°lido.`
    );
    process.exit(1);
  }
}
